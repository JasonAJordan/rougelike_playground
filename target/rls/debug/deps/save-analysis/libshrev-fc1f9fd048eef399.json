{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1","program":"C:\\Users\\Jason\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","shrev","--edition=2018","C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fc1f9fd048eef399","-C","extra-filename=-fc1f9fd048eef399","--out-dir","c:\\Users\\Jason\\Desktop\\codingall\\rust\\games\\rougelike_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jason\\Desktop\\codingall\\rust\\games\\rougelike_playground\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jason\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jason\\Desktop\\codingall\\rust\\games\\rougelike_playground\\target\\rls\\debug\\deps\\libshrev-fc1f9fd048eef399.rmeta"},"prelude":{"crate_id":{"name":"shrev","disambiguator":[1915042533322826383,9472206263857997526]},"crate_root":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src","external_crates":[{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3363949849689723475,17369360418877894296]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3747384843019373223,13759942304014052535]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11478482899240340583,17122159790357076854]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11061011275580665867,9276968084265305739]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7114388531242619052,4066821940473693856]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4334566463604478648,2723111479263688995]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17667198077615336603,6344526255197668589]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15696432714701482152,16902757851256734107]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1659229678336314589,8479756127813614445]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8130323418187167188,4636797448496712652]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1920759351681616324,7198269701569904579]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[17999657139147790221,14614305851743788429]}}],"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":9689,"line_start":1,"line_end":304,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":217,"byte_end":225,"line_start":8,"line_end":8,"column_start":26,"column_end":34},"alias_span":null,"name":"ReaderId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":227,"byte_end":242,"line_start":8,"line_end":8,"column_start":36,"column_end":51},"alias_span":null,"name":"EventIterator","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":9689,"line_start":1,"line_end":304,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":167},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":212},{"krate":0,"index":215}],"decl_id":null,"docs":" Event channel, pull based, that use a ringbuffer for internal\n storage, to make it possible to do immutable reads.","sig":null,"attributes":[{"value":"/ Event channel, pull based, that use a ringbuffer for internal","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ storage, to make it possible to do immutable reads.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":66,"byte_end":121,"line_start":2,"line_end":2,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See examples directory for examples.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":126,"byte_end":166,"line_start":4,"line_end":4,"column_start":1,"column_end":41}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":168,"byte_end":190,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15575,"byte_end":15583,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"ReaderId","qualname":"::storage::ReaderId","value":"ReaderId {  }","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A reader ID which represents a subscription to the events pushed to the\n `EventChannel`.","sig":null,"attributes":[{"value":"/ A reader ID which represents a subscription to the events pushed to the","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15014,"byte_end":15089,"line_start":215,"line_end":215,"column_start":1,"column_end":76}},{"value":"/ `EventChannel`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15090,"byte_end":15109,"line_start":216,"line_end":216,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15110,"byte_end":15113,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ For each reader ID, the last read event is tracked; this way, the buffer","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15114,"byte_end":15190,"line_start":218,"line_end":218,"column_start":1,"column_end":77}},{"value":"/ gets grown whenever it would overwrite an event which was not yet observed","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15191,"byte_end":15269,"line_start":219,"line_end":219,"column_start":1,"column_end":79}},{"value":"/ by every `ReaderId`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15270,"byte_end":15294,"line_start":220,"line_end":220,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15295,"byte_end":15298,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Dropping a `ReaderId` effectively cancels the subscription to those events.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15299,"byte_end":15378,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15379,"byte_end":15382,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Note that as long as a `ReaderId` exists, it is crucial to use it to read","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15383,"byte_end":15460,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/ the events; otherwise the buffer of the `EventChannel` **will** keep","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15461,"byte_end":15533,"line_start":225,"line_end":225,"column_start":1,"column_end":73}},{"value":"/ growing.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15534,"byte_end":15546,"line_start":226,"line_end":226,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24565,"byte_end":24580,"line_start":531,"line_end":531,"column_start":12,"column_end":27},"name":"StorageIterator","qualname":"::storage::StorageIterator","value":"StorageIterator {  }","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Iterator over a slice of data in `RingBufferStorage`.\n","sig":null,"attributes":[{"value":"/ Iterator over a slice of data in `RingBufferStorage`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24479,"byte_end":24536,"line_start":529,"line_end":529,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":462,"byte_end":467,"line_start":18,"line_end":18,"column_start":11,"column_end":16},"name":"Event","qualname":"::Event","value":"Event: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for data to use with the EventChannel.","sig":null,"attributes":[{"value":"/ Marker trait for data to use with the EventChannel.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":320,"byte_end":375,"line_start":15,"line_end":15,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":376,"byte_end":379,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Has an implementation for all types where its bounds are satisfied.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":380,"byte_end":451,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3231,"byte_end":3243,"line_start":91,"line_end":91,"column_start":12,"column_end":24},"name":"EventChannel","qualname":"::EventChannel","value":"EventChannel {  }","parent":null,"children":[{"krate":0,"index":280}],"decl_id":null,"docs":" The `EventChannel`, which is the central component of `shrev`.","sig":null,"attributes":[{"value":"/ The `EventChannel`, which is the central component of `shrev`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":587,"byte_end":653,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":654,"byte_end":657,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## How it works","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":658,"byte_end":677,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":678,"byte_end":681,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This channel has a ring buffer, which it allocates with an initial capacity.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":682,"byte_end":762,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ Once allocated, it writes new events into the buffer, wrapping around when","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":763,"byte_end":841,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ it reaches the \"end\" of the buffer.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":842,"byte_end":881,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":882,"byte_end":885,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ However, before an event gets written into the buffer, the channel checks if","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":886,"byte_end":966,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ all readers have read the event which is about to be overwritten. In case","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":967,"byte_end":1044,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ the answer is \"No\", it will grow the buffer so no events get overwritten.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1045,"byte_end":1122,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1123,"byte_end":1126,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Readers are stores in the `EventChannel` itself, because we need to access","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1127,"byte_end":1205,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ their position in a write, so we can check what's described above. Thus, you","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1206,"byte_end":1286,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ only get a `ReaderId` as a handle.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1287,"byte_end":1325,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1326,"byte_end":1329,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## What do I use it for?","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1330,"byte_end":1358,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1359,"byte_end":1362,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The `EventChannel` is basically a single producer, multiple consumer","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1363,"byte_end":1435,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ (\"SPMC\") channel. That is, a `write` to the channel requires mutable access,","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1436,"byte_end":1516,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ while reading can be done with just an immutable reference. All readers","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1517,"byte_end":1592,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ (consumers) will always get all the events since their last read (or when","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1593,"byte_end":1670,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ they were created, if there was no read yet).","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1671,"byte_end":1720,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1721,"byte_end":1724,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1725,"byte_end":1740,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1741,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1745,"byte_end":1752,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use std::mem::drop;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1753,"byte_end":1776,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1777,"byte_end":1780,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ use shrev::{EventChannel, ReaderId};","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1781,"byte_end":1821,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1822,"byte_end":1825,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // The buffer will initially be 16 events big","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1826,"byte_end":1875,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ let mut channel = EventChannel::with_capacity(16);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1876,"byte_end":1930,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1931,"byte_end":1934,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // This is basically with no effect; no reader can possibly observe it","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":1935,"byte_end":2009,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ channel.single_write(42i32);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2010,"byte_end":2042,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2043,"byte_end":2046,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let mut first_reader = channel.register_reader();","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2047,"byte_end":2100,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2101,"byte_end":2104,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // What's interesting here is that we don't check the readers' positions _yet_","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2105,"byte_end":2187,"line_start":63,"line_end":63,"column_start":1,"column_end":83}},{"value":"/ // That is because the size of 16 allows us to write 16 events before we need to perform","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2188,"byte_end":2280,"line_start":64,"line_end":64,"column_start":1,"column_end":93}},{"value":"/ // such a check.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2281,"byte_end":2301,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ channel.iter_write(0..4);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2302,"byte_end":2331,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2332,"byte_end":2335,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Now, we read 4 events (0, 1, 2, 3)","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2336,"byte_end":2377,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ // Notice how we borrow the ID mutably; this is because logically we modify the reader,","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2378,"byte_end":2469,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ // and we shall not read with the same ID concurrently","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2470,"byte_end":2528,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/ let _events = channel.read(&mut first_reader);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2529,"byte_end":2579,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2580,"byte_end":2583,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Let's create a second reader; this one will not receive any of the previous events","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2584,"byte_end":2673,"line_start":73,"line_end":73,"column_start":1,"column_end":90}},{"value":"/ let mut second_reader = channel.register_reader();","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2674,"byte_end":2728,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2729,"byte_end":2732,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ // No event returned","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2733,"byte_end":2757,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/ let _events = channel.read(&mut second_reader);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2758,"byte_end":2809,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2810,"byte_end":2813,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ channel.iter_write(4..6);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2814,"byte_end":2843,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2844,"byte_end":2847,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Both now get the same two events","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2848,"byte_end":2887,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/ let _events = channel.read(&mut first_reader);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2888,"byte_end":2938,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"/ let _events = channel.read(&mut second_reader);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2939,"byte_end":2990,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2991,"byte_end":2994,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ // We no longer need our second reader, so we drop it","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":2995,"byte_end":3052,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"/ // This is important, since otherwise the buffer would keep growing if our reader doesn't read","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3053,"byte_end":3151,"line_start":86,"line_end":86,"column_start":1,"column_end":99}},{"value":"/ // any events","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3152,"byte_end":3169,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/ drop(second_reader);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3170,"byte_end":3194,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3195,"byte_end":3202,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3548,"byte_end":3551,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<EventChannel<E>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EventChannel` with a default size of 64.\n","sig":null,"attributes":[{"value":"/ Create a new `EventChannel` with a default size of 64.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3478,"byte_end":3536,"line_start":108,"line_end":108,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3679,"byte_end":3692,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<EventChannel<E>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EventChannel` with the given starting capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `EventChannel` with the given starting capacity.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3602,"byte_end":3667,"line_start":113,"line_end":113,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3991,"byte_end":4002,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"would_write","qualname":"<EventChannel<E>>::would_write","value":"pub fn would_write(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any reader would observe an additional event.","sig":null,"attributes":[{"value":"/ Returns `true` if any reader would observe an additional event.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3796,"byte_end":3863,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3868,"byte_end":3871,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This can be used to skip calls to `iter_write` in case the event","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3876,"byte_end":3944,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/ construction is expensive.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3949,"byte_end":3979,"line_start":123,"line_end":123,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4660,"byte_end":4675,"line_start":140,"line_end":140,"column_start":12,"column_end":27},"name":"register_reader","qualname":"<EventChannel<E>>::register_reader","value":"pub fn register_reader(&mut Self) -> ReaderId<E>","parent":null,"children":[],"decl_id":null,"docs":" Register a new reader.","sig":null,"attributes":[{"value":"/ Register a new reader.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4070,"byte_end":4096,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4101,"byte_end":4104,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ To be able to read events, a reader id is required. This is because","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4109,"byte_end":4180,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ otherwise the channel wouldn't know where in the ring buffer the","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4185,"byte_end":4253,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ reader has read to earlier. This information is stored in the channel,","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4258,"byte_end":4332,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ associated with the returned `ReaderId`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4337,"byte_end":4381,"line_start":133,"line_end":133,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4386,"byte_end":4389,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ A newly created `ReaderId` will only receive the events written after","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4394,"byte_end":4467,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ its creation.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4472,"byte_end":4489,"line_start":136,"line_end":136,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4494,"byte_end":4497,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Once you no longer perform `read`s with your `ReaderId`, you should","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4502,"byte_end":4573,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ drop it so the channel can safely overwrite events not read by it.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4578,"byte_end":4648,"line_start":139,"line_end":139,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4864,"byte_end":4875,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"slice_write","qualname":"<EventChannel<E>>::slice_write","value":"pub fn slice_write(&mut Self, &[E]) where E: Clone","parent":null,"children":[],"decl_id":null,"docs":" Write a slice of events into storage\n","sig":null,"attributes":[{"value":"/ Write a slice of events into storage","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4752,"byte_end":4792,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"deprecated(note = \"please use `iter_write` instead\")","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":4797,"byte_end":4852,"line_start":145,"line_end":145,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5064,"byte_end":5074,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"iter_write","qualname":"<EventChannel<E>>::iter_write","value":"pub fn iter_write<I>(&mut Self, I) where I: IntoIterator<Item = E>,\nI::IntoIter: ExactSizeIterator","parent":null,"children":[],"decl_id":null,"docs":" Write an iterator of events into storage\n","sig":null,"attributes":[{"value":"/ Write an iterator of events into storage","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5008,"byte_end":5052,"line_start":153,"line_end":153,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5293,"byte_end":5308,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"drain_vec_write","qualname":"<EventChannel<E>>::drain_vec_write","value":"pub fn drain_vec_write(&mut Self, &mut Vec<E>)","parent":null,"children":[],"decl_id":null,"docs":" Drain a vector of events into storage.\n","sig":null,"attributes":[{"value":"/ Drain a vector of events into storage.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5239,"byte_end":5281,"line_start":162,"line_end":162,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5450,"byte_end":5462,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"single_write","qualname":"<EventChannel<E>>::single_write","value":"pub fn single_write(&mut Self, E)","parent":null,"children":[],"decl_id":null,"docs":" Write a single event into storage.\n","sig":null,"attributes":[{"value":"/ Write a single event into storage.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5400,"byte_end":5438,"line_start":167,"line_end":167,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":6088,"byte_end":6092,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"read","qualname":"<EventChannel<E>>::read","value":"pub fn read(&Self, &mut ReaderId<E>) -> EventIterator<, E>","parent":null,"children":[],"decl_id":null,"docs":" Read any events that have been written to storage since the last read\n with `reader_id` (or the creation of the `ReaderId`, if it hasn't read\n yet).","sig":null,"attributes":[{"value":"/ Read any events that have been written to storage since the last read","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5539,"byte_end":5612,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ with `reader_id` (or the creation of the `ReaderId`, if it hasn't read","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5617,"byte_end":5691,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ yet).","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5696,"byte_end":5705,"line_start":174,"line_end":174,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5710,"byte_end":5713,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Note that this will advance the position of the reader regardless of","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5718,"byte_end":5790,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/ what you do with the iterator. In other words, calling `read`","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5795,"byte_end":5860,"line_start":177,"line_end":177,"column_start":5,"column_end":70}},{"value":"/ without iterating the result won't preserve the events returned. You","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5865,"byte_end":5937,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ need to iterate all the events as soon as you got them from this","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":5942,"byte_end":6010,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ method. This behavior is equivalent to e.g. `Vec::drain`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":6015,"byte_end":6076,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":10111,"byte_end":10124,"line_start":22,"line_end":22,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11015,"byte_end":11028,"line_start":64,"line_end":64,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11171,"byte_end":11184,"line_start":72,"line_end":72,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11293,"byte_end":11306,"line_start":78,"line_end":78,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11461,"byte_end":11474,"line_start":86,"line_end":86,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11635,"byte_end":11639,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":13985,"byte_end":13989,"line_start":173,"line_end":173,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":14340,"byte_end":14346,"line_start":188,"line_end":188,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15795,"byte_end":15803,"line_start":236,"line_end":236,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":16027,"byte_end":16037,"line_start":249,"line_end":249,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":18034,"byte_end":18044,"line_start":317,"line_end":317,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":18069,"byte_end":18079,"line_start":318,"line_end":318,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":18420,"byte_end":18430,"line_start":332,"line_end":332,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24000,"byte_end":24010,"line_start":510,"line_end":510,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24352,"byte_end":24362,"line_start":521,"line_end":521,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24709,"byte_end":24724,"line_start":538,"line_end":538,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":25112,"byte_end":25127,"line_start":555,"line_end":555,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":31690,"byte_end":31700,"line_start":21,"line_end":21,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":32645,"byte_end":32655,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":32892,"byte_end":32901,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":33145,"byte_end":33154,"line_start":76,"line_end":76,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":33178,"byte_end":33187,"line_start":78,"line_end":78,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":33975,"byte_end":33989,"line_start":100,"line_end":100,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":34148,"byte_end":34162,"line_start":110,"line_end":110,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":34297,"byte_end":34311,"line_start":119,"line_end":119,"column_start":25,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":513,"byte_end":514,"line_start":20,"line_end":20,"column_start":19,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3300,"byte_end":3312,"line_start":95,"line_end":95,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3436,"byte_end":3448,"line_start":104,"line_end":104,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":10111,"byte_end":10124,"line_start":22,"line_end":22,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11015,"byte_end":11028,"line_start":64,"line_end":64,"column_start":21,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":2889}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11171,"byte_end":11184,"line_start":72,"line_end":72,"column_start":27,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11293,"byte_end":11306,"line_start":78,"line_end":78,"column_start":21,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":2894}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11461,"byte_end":11474,"line_start":86,"line_end":86,"column_start":27,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":11635,"byte_end":11639,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":13985,"byte_end":13989,"line_start":173,"line_end":173,"column_start":26,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":82},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":14340,"byte_end":14346,"line_start":188,"line_end":188,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":15795,"byte_end":15803,"line_start":236,"line_end":236,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":16027,"byte_end":16037,"line_start":249,"line_end":249,"column_start":6,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":18034,"byte_end":18044,"line_start":317,"line_end":317,"column_start":22,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2822}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":18069,"byte_end":18079,"line_start":318,"line_end":318,"column_start":22,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2834}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":18420,"byte_end":18430,"line_start":332,"line_end":332,"column_start":18,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24000,"byte_end":24010,"line_start":510,"line_end":510,"column_start":26,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":123},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24352,"byte_end":24362,"line_start":521,"line_end":521,"column_start":18,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":123},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":24709,"byte_end":24724,"line_start":538,"line_end":538,"column_start":26,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":7168}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\storage.rs","byte_start":25112,"byte_end":25127,"line_start":555,"line_end":555,"column_start":35,"column_end":50},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":7057}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":31690,"byte_end":31700,"line_start":21,"line_end":21,"column_start":6,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":32645,"byte_end":32655,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":2477}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":32892,"byte_end":32901,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":33145,"byte_end":33154,"line_start":76,"line_end":76,"column_start":13,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":33178,"byte_end":33187,"line_start":78,"line_end":78,"column_start":20,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":2477}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":33975,"byte_end":33989,"line_start":100,"line_end":100,"column_start":9,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":34148,"byte_end":34162,"line_start":110,"line_end":110,"column_start":19,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\util.rs","byte_start":34297,"byte_end":34311,"line_start":119,"line_end":119,"column_start":25,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2834}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":469,"byte_end":473,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":208}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":476,"byte_end":480,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":208}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":513,"byte_end":514,"line_start":20,"line_end":20,"column_start":19,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":210},"to":{"krate":0,"index":208}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3300,"byte_end":3312,"line_start":95,"line_end":95,"column_start":21,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":2800}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shrev-1.1.1\\src\\lib.rs","byte_start":3436,"byte_end":3448,"line_start":104,"line_end":104,"column_start":9,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}}]}