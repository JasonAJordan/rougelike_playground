{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2","program":"C:\\Users\\Jason\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","mopa","C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=684be06019385543","-C","extra-filename=-684be06019385543","--out-dir","c:\\Users\\Jason\\Desktop\\codingall\\rust\\games\\rougelike_playground\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jason\\Desktop\\codingall\\rust\\games\\rougelike_playground\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jason\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jason\\Desktop\\codingall\\rust\\games\\rougelike_playground\\target\\rls\\debug\\deps\\libmopa-684be06019385543.rmeta"},"prelude":{"crate_id":{"name":"mopa","disambiguator":[4915713301867699574,9035787700006287200]},"crate_root":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src","external_crates":[{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3363949849689723475,17369360418877894296]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3747384843019373223,13759942304014052535]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11478482899240340583,17122159790357076854]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11061011275580665867,9276968084265305739]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7114388531242619052,4066821940473693856]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4334566463604478648,2723111479263688995]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17667198077615336603,6344526255197668589]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15696432714701482152,16902757851256734107]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1659229678336314589,8479756127813614445]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8130323418187167188,4636797448496712652]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1920759351681616324,7198269701569904579]}},{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[17999657139147790221,14614305851743788429]}}],"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":761,"byte_end":15459,"line_start":16,"line_end":411,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":761,"byte_end":15459,"line_start":16,"line_end":411,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":19}],"decl_id":null,"docs":" **MOPA: My Own Personal Any.** A macro to implement all the `Any` methods on your own trait.","sig":null,"attributes":[{"value":"/ **MOPA: My Own Personal Any.** A macro to implement all the `Any` methods on your own trait.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":761,"byte_end":857,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":858,"byte_end":861,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You like `Any`—its ability to store any `'static` type as a trait object and then downcast it","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":862,"byte_end":961,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ back to the original type is very convenient, and in fact you need it for whatever misguided","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":962,"byte_end":1058,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ reason. But it’s not enough. What you *really* want is your own trait object type with `Any`’s","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1059,"byte_end":1161,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ functionality glued onto it. Maybe you have a `Person` trait and you want your people to be","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1162,"byte_end":1257,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ able to do various things, but you also want to be able to conveniently downcast the person to","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1258,"byte_end":1356,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ its original type, right? Alas, you can’t write a type like `Box<Person + Any>` (at present,","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1357,"byte_end":1455,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ anyway). So what do you do instead? Do you give up? No, no! No, no! Enter MOPA.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1456,"byte_end":1539,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1540,"byte_end":1543,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ > There once was a quite friendly trait  ","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1544,"byte_end":1589,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ > Called `Person`, with much on its plate.  ","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1590,"byte_end":1638,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ >     “I need to be `Any`  ","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1639,"byte_end":1676,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ >     To downcast to `Benny`—  ","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1677,"byte_end":1718,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/ > But I’m not, so I guess I’ll just wait.”","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1719,"byte_end":1771,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1772,"byte_end":1775,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A pitiful tale, isn’t it? Especially given that there was a bear chasing it with intent to eat","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1776,"byte_end":1876,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ it. Fortunately now you can *mopafy* `Person` in three simple steps:","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1877,"byte_end":1949,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1950,"byte_end":1953,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ 1. Add the `mopa` crate to your `Cargo.toml` as usual and your crate root like so:","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":1954,"byte_end":2040,"line_start":35,"line_end":35,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2041,"byte_end":2044,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/    ```rust,ignore","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2045,"byte_end":2066,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/    #[macro_use]","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2067,"byte_end":2086,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/    extern crate mopa;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2087,"byte_end":2112,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/    ```","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2113,"byte_end":2123,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2124,"byte_end":2127,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ 2. Make `Any` (`mopa::Any`, not `std::any::Any`) a supertrait of `Person`;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2128,"byte_end":2206,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2207,"byte_end":2210,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ 3. `mopafy!(Person);`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2211,"byte_end":2237,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2238,"byte_end":2241,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ And lo, you can now write `person.is::<Benny>()` and `person.downcast_ref::<Benny>()` and so on","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2242,"byte_end":2341,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ to your heart’s content. Simple, huh?","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2342,"byte_end":2385,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2386,"byte_end":2389,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Oh, by the way, it was actually the person on the bear’s plate. There wasn’t really anything on","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2390,"byte_end":2493,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"/ `Person`’s plate after all.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2494,"byte_end":2527,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2528,"byte_end":2531,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2532,"byte_end":2543,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2544,"byte_end":2560,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/ extern crate mopa;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2561,"byte_end":2583,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2584,"byte_end":2587,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ struct Bear {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2588,"byte_end":2605,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/     // This might be a pretty fat bear.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2606,"byte_end":2649,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     fatness: u16,","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2650,"byte_end":2671,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2672,"byte_end":2677,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2678,"byte_end":2681,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ impl Bear {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2682,"byte_end":2697,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/     fn eat(&mut self, person: Box<Person>) {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2698,"byte_end":2746,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/         self.fatness = (self.fatness as i16 + person.weight()) as u16;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2747,"byte_end":2821,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2822,"byte_end":2831,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2832,"byte_end":2837,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2838,"byte_end":2841,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ trait Person: mopa::Any {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2842,"byte_end":2871,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/     fn panic(&self);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2872,"byte_end":2896,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     fn yell(&self) { println!(\"Argh!\"); }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2897,"byte_end":2942,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/     fn sleep(&self);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2943,"byte_end":2967,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     fn weight(&self) -> i16;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":2968,"byte_end":3000,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3001,"byte_end":3006,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3007,"byte_end":3010,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ mopafy!(Person);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3011,"byte_end":3031,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3032,"byte_end":3035,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ struct Benny {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3036,"byte_end":3054,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/     // (Benny is not a superhero. He can’t carry more than 256kg of food at once.)","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3055,"byte_end":3143,"line_start":77,"line_end":77,"column_start":1,"column_end":87}},{"value":"/     kilograms_of_food: u8,","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3144,"byte_end":3174,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3175,"byte_end":3180,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3181,"byte_end":3184,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ impl Person for Benny {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3185,"byte_end":3212,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/     fn panic(&self) { self.yell() }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3213,"byte_end":3252,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     fn sleep(&self) { /* ... */ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3253,"byte_end":3290,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/     fn weight(&self) -> i16 {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3291,"byte_end":3324,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/         // Who’s trying to find out? I’m scared!","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3325,"byte_end":3381,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/         self.yell();","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3382,"byte_end":3406,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/         self.kilograms_of_food as i16 + 60","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3407,"byte_end":3453,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3454,"byte_end":3463,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3464,"byte_end":3469,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3470,"byte_end":3473,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ struct Chris;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3474,"byte_end":3491,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3492,"byte_end":3495,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Chris {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3496,"byte_end":3512,"line_start":93,"line_end":93,"column_start":1,"column_end":17}},{"value":"/     // Normal people wouldn’t be brave enough to hit a bear but Chris might.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3513,"byte_end":3595,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/     fn hit(&self, bear: &mut Bear) {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3596,"byte_end":3636,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/         println!(\"Chris hits the bear! How brave! (Or maybe stupid?)\");","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3637,"byte_end":3712,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/         // Meh, boundary conditions, what use are they in examples?","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3713,"byte_end":3784,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/         // Chris clearly hits quite hard. Poor bear.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3785,"byte_end":3841,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"/         bear.fatness -= 1;","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3842,"byte_end":3872,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3873,"byte_end":3882,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3883,"byte_end":3888,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3889,"byte_end":3892,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ impl Person for Chris {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3893,"byte_end":3920,"line_start":103,"line_end":103,"column_start":1,"column_end":28}},{"value":"/     fn panic(&self) { /* ... */ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3921,"byte_end":3958,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/     fn sleep(&self) { /* ... */ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3959,"byte_end":3996,"line_start":105,"line_end":105,"column_start":1,"column_end":38}},{"value":"/     fn weight(&self) -> i16 { -5 /* antigravity device! cool! */ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":3997,"byte_end":4067,"line_start":106,"line_end":106,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4068,"byte_end":4073,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4074,"byte_end":4077,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ fn simulate_simulation(person: Box<Person>, bear: &mut Bear) {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4078,"byte_end":4144,"line_start":109,"line_end":109,"column_start":1,"column_end":67}},{"value":"/     if person.is::<Benny>() {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4145,"byte_end":4178,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/         // None of the others do, but Benny knows this particular","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4179,"byte_end":4248,"line_start":111,"line_end":111,"column_start":1,"column_end":70}},{"value":"/         // bear by reputation and he’s *really* going to be worried.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4249,"byte_end":4323,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/         person.yell()","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4324,"byte_end":4349,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4350,"byte_end":4359,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/     // If it happens to be Chris, he’ll hit the bear.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4360,"byte_end":4419,"line_start":115,"line_end":115,"column_start":1,"column_end":58}},{"value":"/     person.downcast_ref::<Chris>().map(|chris| chris.hit(bear));","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4420,"byte_end":4488,"line_start":116,"line_end":116,"column_start":1,"column_end":69}},{"value":"/     bear.eat(person);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4489,"byte_end":4514,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4515,"byte_end":4520,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4521,"byte_end":4524,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4525,"byte_end":4540,"line_start":120,"line_end":120,"column_start":1,"column_end":16}},{"value":"/     let mut bear = Bear { fatness: 10 };","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4541,"byte_end":4585,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"/     simulate_simulation(Box::new(Benny { kilograms_of_food: 5 }), &mut bear);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4586,"byte_end":4667,"line_start":122,"line_end":122,"column_start":1,"column_end":82}},{"value":"/     simulate_simulation(Box::new(Chris), &mut bear);","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4668,"byte_end":4724,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4725,"byte_end":4730,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4731,"byte_end":4738,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4739,"byte_end":4742,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Now *should* you do something like this? Probably not. Enums are probably a better solution for","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4743,"byte_end":4842,"line_start":127,"line_end":127,"column_start":1,"column_end":100}},{"value":"/ this particular case as written; frankly I believe that almost the only time you should","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4843,"byte_end":4934,"line_start":128,"line_end":128,"column_start":1,"column_end":92}},{"value":"/ downcast an Any trait object (or a mopafied trait object) is with a generic parameter, when","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":4935,"byte_end":5030,"line_start":129,"line_end":129,"column_start":1,"column_end":96}},{"value":"/ producing something like `AnyMap`, for example. If you control *all* the code, `Any` trait","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5031,"byte_end":5125,"line_start":130,"line_end":130,"column_start":1,"column_end":95}},{"value":"/ objects are probably not the right solution; they’re good for cases with user-defined","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5126,"byte_end":5217,"line_start":131,"line_end":131,"column_start":1,"column_end":90}},{"value":"/ types across a variety of libraries. But the question of purpose and suitability is open, and I","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5218,"byte_end":5317,"line_start":132,"line_end":132,"column_start":1,"column_end":100}},{"value":"/ don’t have a really good example of such a use case here at present. TODO.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5318,"byte_end":5398,"line_start":133,"line_end":133,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5999,"byte_end":6002,"line_start":155,"line_end":155,"column_start":11,"column_end":14},"name":"Any","qualname":"::Any","value":"Any: StdAny","parent":null,"children":[{"krate":0,"index":11}],"decl_id":null,"docs":" A type to emulate dynamic typing.","sig":null,"attributes":[{"value":"/ A type to emulate dynamic typing.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5612,"byte_end":5649,"line_start":146,"line_end":146,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5650,"byte_end":5653,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This is a simple wrapper around `std::any::Any` which exists for technical reasons.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5654,"byte_end":5741,"line_start":148,"line_end":148,"column_start":1,"column_end":88}},{"value":"/ Every type that implements `std::any::Any` implements this `Any`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5742,"byte_end":5811,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5812,"byte_end":5815,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ See the [`std::any::Any` documentation](http://doc.rust-lang.org/std/any/trait.Any.html) for","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5816,"byte_end":5912,"line_start":151,"line_end":151,"column_start":1,"column_end":97}},{"value":"/ more details.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5913,"byte_end":5930,"line_start":152,"line_end":152,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5931,"byte_end":5934,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Any traits to be mopafied must extend this trait.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":5935,"byte_end":5988,"line_start":154,"line_end":154,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6076,"byte_end":6087,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"get_type_id","qualname":"::Any::get_type_id","value":"pub fn get_type_id(&Self) -> TypeId","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Gets the `TypeId` of `self`.\n","sig":null,"attributes":[{"value":"/ Gets the `TypeId` of `self`.","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6017,"byte_end":6049,"line_start":156,"line_end":156,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6456,"byte_end":6467,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"TraitObject","qualname":"::TraitObject","value":"TraitObject { data, vtable }","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6396,"byte_end":6406,"line_start":167,"line_end":167,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6478,"byte_end":6482,"line_start":171,"line_end":171,"column_start":9,"column_end":13},"name":"data","qualname":"::TraitObject::data","value":"*mut ()","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6501,"byte_end":6507,"line_start":172,"line_end":172,"column_start":9,"column_end":15},"name":"vtable","qualname":"::TraitObject::vtable","value":"*mut ()","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6133,"byte_end":6134,"line_start":161,"line_end":161,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6004,"byte_end":6010,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3464},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\Jason\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mopa-0.2.2\\src\\lib.rs","byte_start":6133,"byte_end":6134,"line_start":161,"line_end":161,"column_start":25,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":0,"index":10}}]}